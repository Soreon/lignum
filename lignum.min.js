export default class Lignum{container=null;data=null;options=null;get hasCheckbox(){return this.options&&!0===this.options.checkbox}get onLabelClick(){return this.options&&this.option?this.options.labelClick:null}get onImgClick(){return this.options&&this.option?this.options.imgClick:null}constructor(e,t,n){this.updateContainer(e),t&&(this.options=t),n&&(this.data=n,this.generate(this.container,this.data))}static emitEvent(e,t){const n=document.createEvent("HTMLEvents");n.initEvent(t,!1,!0),console.log(t,e),e.dispatchEvent(n)}checkChildren(e){const t=e.querySelector(".lignum-node-children");if(t){const n=t.querySelectorAll("input[type=checkbox]"),i=e.querySelector("input[type=checkbox]");for(let e=0;e<n.length;e+=1)n[e].checked===i.checked&&!1===n[e].indeterminate||this.emitEvent(n[e],"change"),n[e].checked=i.checked,n[e].indeterminate=!1,n[e].indeterminate?this.emitEvent(n[e],"indeterminate"):n[e].checked?this.emitEvent(n[e],"checked"):this.emitEvent(n[e],"unchecked")}this.refreshAncestors(e)}refreshAncestors(e){const t=e.parentNode.parentNode;if(!t.classList.contains("lignum-node"))return;const n=t.querySelector("input[type=checkbox]"),i=t.querySelector(".lignum-node-children").querySelectorAll(":scope .lignum-node");let c=!0,s=!1,a=!1;for(let e=0;e<i.length;e+=1){const t=i[e].querySelector("input[type=checkbox]");c&=t.checked,s|=t.checked,a|=t.indeterminate}const o=a||!c&&s,d=c;o===n.indeterminate&&d===n.checked||this.emitEvent(n,"change"),n.indeterminate=o,n.checked=d,o?this.emitEvent(n,"indeterminate"):d?this.emitEvent(n,"checked"):this.emitEvent(n,"unchecked"),this.refreshAncestors(t)}updateContainer(e){if("string"!=typeof e)throw new Error("Wrong format for the container's id");if(this.container=document.querySelector(e),!this.container)throw new Error("Cannot find the container "+e);this.emitEvent(this.container,"containerUpdated")}updateData(e){this.data=e,this.emitEvent(this.container,"dataUpdated")}refresh(){this.generate(this.container,this.data),this.emitEvent(this.container,"treeRefreshed")}generate(e,t){if(!Array.isArray(t))throw new Error("Data is not an array");e.innerHTML="",e.classList.add("lignum-container");const n=document.createElement("div");n.classList.add("lignum-node-vertical-dotted-line"),e.appendChild(n);for(let n=0;n<t.length;n+=1){const i=t[n],c=i.children&&i.children.length>0,s=i.img&&i.img.length>0,a=document.createElement("div");a.classList.add("lignum-node-horizontal-dotted-line");const o=document.createElement("button");o.classList.add("lignum-node-button"),o.innerText="+";let d=null;if(this.hasCheckbox)switch(d=document.createElement("input"),d.type="checkbox",d.classList.add("lignum-node-checkbox"),i.checkboxState){case"unchecked":d.checked=!1;break;case"indeterminate":d.indeterminate=!0;break;case"checked":default:d.checked=!0}let l=null;s&&(l=document.createElement("img"),l.classList.add("lignum-node-img"),l.src=i.img);const r=document.createElement("span");r.classList.add("lignum-node-label"),this.hasCheckbox||c||r.classList.add("lignum-node-naked-label"),r.innerText=i.name;const h=document.createElement("div");h.classList.add("lignum-node-ui");for(let e=0;i.data&&e<i.data.length;e+=1){const{key:t,value:n}=i.data[e];h.dataset[t]=n}c||h.classList.add("childless"),h.appendChild(a),c&&h.appendChild(o),this.hasCheckbox&&h.appendChild(d),s&&h.appendChild(l),h.appendChild(r);const m=document.createElement("div");m.classList.add("lignum-node-children"),c&&this.generate(m,i.children);const u=document.createElement("div");u.classList.add("lignum-node"),"open"!==i.nodeState&&u.classList.add("close"),u.appendChild(h),c&&u.appendChild(m),o.addEventListener("click",(e=>{o.innerText="+"===o.innerText?"-":"+",u.classList.toggle("close"),i.nodeState=u.classList.contains("close")?"close":"open",this.emitEvent(e.target,u.classList.contains("close")?"close":"open"),this.emitEvent(e.target,"change")})),this.hasCheckbox&&d.addEventListener("click",(e=>{e.target.indeterminate?(i.checkboxState="indeterminate",this.emitEvent(e.target,"indeterminate")):e.target.checked?(i.checkboxState="checked",this.emitEvent(e.target,"checked")):(i.checkboxState="unchecked",this.emitEvent(e.target,"unchecked")),this.emitEvent(e.target,"change"),this.checkChildren(e.target.parentElement.parentElement)})),r.addEventListener("click",(()=>{"toggleCheckbox"===this.onLabelClick?d.click():"toggleWrap"===this.onLabelClick&&o.click()})),s&&l.addEventListener("click",(()=>{"toggleCheckbox"===this.onImgClick?d.click():"toggleWrap"===this.onImgClick&&o.click()})),e.appendChild(u)}}}
